<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="thetypeattribute" xml:lang="en-us">
<title>The <xmlatt>type</xmlatt> attribute</title>
<shortdesc>The <xmlatt>type</xmlatt> attribute is used on linking elements to describe the target of
    a cross-reference. It also is used on the <xmlelement>note</xmlelement> element to describe the
    note type, as well as on several other elements for varying purposes.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>linking attributes<indexterm><xmlatt>type</xmlatt></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
<refbody>
<section id="section-1">This topic describes how to interpret the <xmlatt>type</xmlatt> attribute
      when it is used on linking elements. Usage information for the <xmlatt>type</xmlatt> attribute
      on other elements, such as <xmlelement>note</xmlelement> or
      <xmlelement>copyright</xmlelement>, is described in the element reference topics for those
      elements.</section>
<section id="linking"><p>The <xmlatt>type</xmlatt> attribute describes the target of a cross-reference and might generate
        cross-reference text based on that description. Only the <xmlelement>xref</xmlelement>
        element can link to content below the topic level: other types of linking can target whole
        topics, but not parts of topics. Typically <xmlelement>xref</xmlelement> should also be
        limited to topic-level targets, unless the output is primarily print-oriented. Web-based
        referencing works best at the level of whole topics, rather than anchor locations within
        topics.</p><p>If not explicitly specified on an element, the <xmlatt>type</xmlatt> attribute value cascades
        from the closest ancestor element. If there is no explicit value for the
          <xmlatt>type</xmlatt> attribute on any ancestor, a default value of <q>topic</q> is used. </p>
      <draft-comment author="robander" time="19 May 2021">I think we need to look closely at the
        next clause, which is normative; I don't think the "specialization of the
          <xmlatt>type</xmlatt> attribute value" is quite right. It's supposed to be a
        specialization of the element type named as the <i>value</i> of
        <xmlatt>type</xmlatt>.</draft-comment>
      <p>During output processing for references to DITA topics (<codeph>format="dita"</codeph>), it
        is an error if the actual type of a DITA topic and the explicit, inherited, or default value
        for the <xmlatt>type</xmlatt> attribute are not the same as or a specialization of the
          <xmlatt>type</xmlatt> attribute value. In this case, an implementation <term
          outputclass="RFC-2119">MAY</term> give an error message, and <term outputclass="RFC-2119"
          >MAY</term> recover from this error condition by using the <xmlatt>type</xmlatt> attribute
        value. </p>
      <p>During output processing for references to non-DITA objects (that is, either scope is
        â€œexternal" or format is neither <keyword>dita</keyword> nor <keyword>ditamap</keyword>) or
        other cases where the type of the referenced item cannot be determined from the item itself,
        the explicit, inherited, or default value for the <xmlatt>type</xmlatt> attribute is used
        without any validation. </p>
      <p>When a referencing element is first added to or updated in a document, DITA-aware editors
          <term outputclass="RFC-2119">MAY</term> set the <xmlatt>type</xmlatt> attribute value
        based on the actual type of a referenced DITA topic.</p><p>If the <xmlatt>type</xmlatt> attribute is specified when referencing DITA content, it should
        match one of the values in the referenced element&apos;s <xmlatt>class</xmlatt> attribute.
        The <xmlatt>type</xmlatt> value can be an unqualified local name (for example,
          <keyword>fig</keyword>) or a qualified name exactly as specified in the
          <xmlatt>class</xmlatt> attribute (for example, <keyword>mymodule/mytype</keyword>).
        Processors might ignore qualified names or consider only the local name.</p><p>For example, if the value is set to <codeph>type="topic"</codeph>, the link could be to a generic
        topic, or any specialization of topic, including concept, task, and reference. Applications
          <term outputclass="RFC-2119">MAY</term> issue a warning when the
        specified or inherited <xmlatt>type</xmlatt> attribute value does not match the target (or a
        specialization ancestor of the target).</p><p>Some possible values for use on the <xmlelement>xref</xmlelement> element and its specializations
include:</p><dl><dlentry>
<dt><keyword>fig</keyword></dt>
<dd>Indicates a link to a figure.</dd>
</dlentry><dlentry>
<dt><keyword>table</keyword></dt>
<dd>Indicates a link to a table.</dd>
</dlentry><dlentry>
<dt><keyword>li</keyword></dt>
<dd>Indicates a link to an ordered list item.</dd>
</dlentry><dlentry>
<dt><keyword>fn</keyword></dt>
<dd>Indicates a link to a footnote.</dd>
</dlentry><dlentry>
<dt><keyword>section</keyword></dt>
<dd>Indicates a link to a section.</dd>
</dlentry></dl><p>Other values that can be used on any linking element include:</p><dl><dlentry>
<dt>concept, task, reference, topic</dt>
<dd>Cross-reference to a topic type.</dd>
</dlentry><dlentry>
<dt>(no value)</dt>
<dd>The processor should retrieve the actual type from the target
if available. If the type cannot be determined, the default should
be treated as "topic".</dd>
</dlentry>
        <dlentry conkeyref="reuse-attributes/ditauseconref">
          <dt> </dt>
          <dd> </dd>
        </dlentry></dl><p>Other values can be used to indicate other types of topics or elements as targets. Processing is
        only required to support the above list or specializations of types in that list. Supporting
        additional types as targets might require the creation of processing overrides.</p></section>
</refbody>
</reference>

