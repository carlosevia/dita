<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="adding_an_attribute_to_certain_table_elements">
    <title>Example: Adding an attribute to certain table elements using DTD</title>
    <shortdesc>In this scenario, a company makes extensive use of complex tables to present product
        listings. They occasionally highlight individual cells, rows, or columns for various
        purposes. The DITA architect wants to implement a semantically meaningful way to identify
        the purpose of various table elements.</shortdesc>
    <prolog>
        <metadata>
            <keywords>
                <indexterm>expansion modules<indexterm>examples<indexterm>expanding attributes for
                            an element</indexterm></indexterm></indexterm>
                <indexterm>examples<indexterm>expansion modules<indexterm>expanding attributes for
                            an element</indexterm></indexterm></indexterm>
            </keywords>
        </metadata>
    </prolog>
    <conbody>
        <p>The DITA architect decides to create a new attribute (<xmlatt>cell-purpose</xmlatt>) and
            add it to the attribute lists of the following elements:</p>
        <ul>
            <li><xmlelement>entry</xmlelement></li>
            <li><xmlelement>row</xmlelement></li>
            <li><xmlelement>colspec</xmlelement></li>
            <li><xmlelement>stentry</xmlelement></li>
            <li><xmlelement>strow</xmlelement></li>
        </ul>
        <p>The new attribute will be specialized from <xmlatt>base</xmlatt>; it will have a small
            set of tokens that can be values for the new attribute.</p>
        <p>The DITA architect decides to integrate the attribute declaration and its assignment to
            elements into a single expansion module. An alternate approach would be to put each
                <codeph>&lt;!ATTLIST</codeph> declaration in its own separate expansion module, thus
            allowing DITA architects who construct document-type shells to decide the elements to
            which to apply the attribute.</p>
        <ol>
            <li><draft-comment author="Kristen J Eberlein" time="07 June 2021">
                    <p>Comments by Eliot Kimber: </p>
                    <p>[Re defining the attribute]: I don't really see the value in having the
                        "-expansion" distinction here--whether to use this as a global attribute or
                        through extension is really up to the doc type shell author. The definer of
                        the attribute domain may intend for it to be used only on specific element
                        types but that's not really their choice to make."</p>
                    <p>[Re the entity to be used in the @specializations attribute]: "Should there
                        be leading and trailing space in the replacement text?"</p>
                    <p>[Re adding the attribute to the elements]: "I first thought we shouldn't
                        allow this specialization-and-integration-in-one kind of module but I
                        convinced myself it's OK. However, we still need an example of not doing
                        this, for example, taking an *existing* attribute domain and using a
                        separate extension module to allow it in specific places, omitting the usual
                        global integration."</p>
                </draft-comment>First, the DITA architect creates the attribute domain module for
                the <xmlatt>cell-purpose</xmlatt> attribute:
                    <filepath>acme-cellPurposeAttExpansion.ent</filepath>.<codeblock>&lt;!-- Define the attribute -->
&lt;!ENTITY % cellPurposeAtt-d-attribute-expansion
  "cell-purpose  (sale | out-of-stock | new | last-chance | inherit | none)  #IMPLIED"
&gt;

&lt;!-- Declare the entity to be used in the @specializations attribute -->
&lt;!ENTITY cellPurposeAtt-d-att "@base/cell-purpose" >

&lt;!-- Add the attribute to the elements. -->
&lt;!ATTLIST entry %cellPurposeAtt-d-attribute-expansion;>
&lt;!ATTLIST row %cellPurposeAtt-d-attribute-expansion;>
&lt;!ATTLIST colspec %cellPurposeAtt-d-attribute-expansion;>
&lt;!ATTLIST strow %cellPurposeAtt-d-attribute-expansion;>
&lt;!ATTLIST stentry %cellPurposeAtt-d-attribute-expansion;></codeblock><note>The
                    attribute definition entity ends in <codeph>-expansion</codeph>; this indicates
                    that this is an expansion attribute and should not be included in the
                        <parameterentity>base-attribute-extensions</parameterentity> entity in the
                    document-type shell.<draft-comment author="Kristen J Eberlein"
                        time="07 June 2021">
                        <p>Comment by Eliot Kimber: "See my comment above: I don't think we should
                            do this."</p>
                    </draft-comment></note><draft-comment author="Kristen J Eberlein"
                    time="18 May 2021">
                    <p>Comment by Robert Anderson: "[The note] should clarify that this entity is
                        totally optional -- only useful here because we're adding the same attribute
                        with the same tokens to several elements. If you're only adding one
                        attribute to one element, you wouldn't want this entity."</p>
                </draft-comment></li>
            <li>The DITA architect updates the <filepath>catalog.xml</filepath> file to include the
                expansion module.<draft-comment author="Kristen J Eberlein" time="07 June 2021">
                    <p>Comment by Eliot Kimber: "This is something almost everybody *would* do but
                        it's not actually required since the use of catalogs is not required by DITA
                        or by the use of DTDs generally, at least in theory (and in actual fact if
                        you are an Author/Editor user, which doesn't support catalogs)."</p>
                </draft-comment></li>
            <li>The DITA architect integrates this module into the document-type
                shell.<codeblock>&lt;!-- ============================================================= -->
&lt;!--             DOMAIN ATTRIBUTES DECLARATIONS                    -->
&lt;!-- ============================================================= -->
<b>
&lt;!ENTITY % cellPurposeAttExpansion-d-dec
  PUBLIC "-//ACME//ENTITIES DITA Cell Purpose Attribute Expansion//EN"
         "cellPurposeAttExpansion.ent"
>%cellPurposeAttExpansion-d-dec;</b></codeblock></li>
            <li>The DITA architect adds the entity for the contribution to the
                    <xmlatt>specializations</xmlatt>
                attribute.<codeblock>&lt;!-- ============================================================= -->
&lt;!--                 SPECIALIZATIONS ATTRIBUTE OVERRIDE            -->
&lt;!-- ============================================================= -->

&lt;!ENTITY included-domains
                          "&amp;audienceAtt-d-att;
                           <b>&amp;cellPurposeAtt-d-att;
</b>                           &amp;deliveryTargetAtt-d-att;
                           &amp;otherpropsAtt-d-att;
                           &amp;platformAtt-d-att;
                           &amp;productAtt-d-att;"
></codeblock></li>
            <li>After checking the test topic to ensure that the attribute lists are modified as
                expected, the work is done.</li>
        </ol>
    </conbody>
</concept>
